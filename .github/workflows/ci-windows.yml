name: CI Windows Build (testing)

on:
  push:
    branches:
      - testing/v1.0.0
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    env:
      QT_QPA_PLATFORM: offscreen
      PYTHONPATH: .
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest -q

  build:
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          New-Item -ItemType Directory -Force -Path build\logs | Out-Null
          New-Item -ItemType Directory -Force -Path build\prereq | Out-Null

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          pyinstaller --onefile --noconsole app/main.py --name DailyCompanion --clean `
            --collect-all PyQt5 `
            --hidden-import pandas --hidden-import numpy --hidden-import PyQt5.sip 2>&1 |
          Tee-Object -FilePath build\logs\pyinstaller.log

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Prepare VC++ Redistributable
        shell: pwsh
        run: |
          Invoke-WebRequest -UseBasicParsing `
            -Uri "https://aka.ms/vs/17/release/vc_redist.x64.exe" `
            -OutFile "build\prereq\vcredist_x64.exe"

      - name: Create Installer
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss 2>&1 |
          Tee-Object -FilePath build\logs\inno_build.log

      - name: Upload Artifacts (binaries)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: DailyCompanion-Windows
          path: |
            dist/DailyCompanion.exe
            dist/DailyCompanionInstaller.exe

      - name: Upload Build Logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build/logs/*
